// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "03/04/2019 20:32:49"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          LC3
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module LC3_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [2:0] SR_r;
reg [15:0] address_in_direct;
reg clk;
reg clk_direct;
reg clk_r;
// wires                                               
wire [15:0] Bus;
wire [15:0] IR;
wire [15:0] MDROut;
wire N;
wire [15:0] Out_r;
wire P;
wire [15:0] PC;
wire Z;
wire [5:0] current_state;
wire [15:0] mem_out_direct;

// assign statements (if any)                          
LC3 i1 (
// port map - connection between master ports and signals/registers   
	.Bus(Bus),
	.IR(IR),
	.MDROut(MDROut),
	.N(N),
	.Out_r(Out_r),
	.P(P),
	.PC(PC),
	.SR_r(SR_r),
	.Z(Z),
	.address_in_direct(address_in_direct),
	.clk(clk),
	.clk_direct(clk_direct),
	.clk_r(clk_r),
	.current_state(current_state),
	.mem_out_direct(mem_out_direct)
);
initial 
begin 
#800000 $finish;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #5000 1'b1;
	#5000;
end 

// clk_r
initial
begin
	clk_r = 1'b0;
end 
// SR_r[ 2 ]
initial
begin
	SR_r[2] = 1'b0;
end 
// SR_r[ 1 ]
initial
begin
	SR_r[1] = 1'b0;
end 
// SR_r[ 0 ]
initial
begin
	SR_r[0] = 1'b0;
end 
endmodule

